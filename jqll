import datetime
from datetime import timedelta
import calendar

def generate_jql():
    # Get today's date and end of month
    today = datetime.date.today()
    last_day = calendar.monthrange(today.year, today.month)[1]
    end_of_month = datetime.date(today.year, today.month, last_day)
    
    # Calculate cutoff dates for each SLA
    critical_cutoff = end_of_month - timedelta(days=15)
    high_cutoff = end_of_month - timedelta(days=30)
    medium_cutoff = end_of_month - timedelta(days=90)
    low_cutoff = end_of_month - timedelta(days=365)
    
    # Build JQL query
    jql = f"""
status NOT IN (Resolved, Closed, Done) AND (
    (severity = "Critical" AND created <= "{critical_cutoff}")
    OR (severity = "High" AND created <= "{high_cutoff}")
    OR (severity = "Medium" AND created <= "{medium_cutoff}")
    OR (severity = "Low" AND created <= "{low_cutoff}")
)
ORDER BY created ASC, severity DESC
""".strip()
    
    return jql

def save_jql_to_file(jql, filename="sla_breach_query.txt"):
    with open(filename, "w") as file:
        file.write(jql)
    print(f"JQL query saved to {filename}")

if __name__ == "__main__":
    jql_query = generate_jql()
    save_jql_to_file(jql_query)
    print("\nGenerated JQL (showing all issues out of SLA by end of month):\n")
    print(jql_query)