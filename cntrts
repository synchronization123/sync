import requests
import pandas as pd

# Define variables
contrast_token = 'dhdjdjdjdjrjrjrjdj=='
OrgUUid = 'gshdhdhd'
App_Ids = ['hdj-jdjdjd-7788-jdjdjdj', 'hdjdjdjd', 'dhdjdkdkd']  # Updated list of App IDs
api_key = 'hhjkkjdddjdkdk'

# Define headers
contrast_headers = {
    'Authorization': contrast_token,
    'Api-key': api_key,
    'Accept': 'application/json'
}

# Base URL for the API
base_url = 'https://contrast.crm.com/Contrast/api/ng/'

# Define the fields to extract
required_fields = ['environment', 'status', 'server_id', 'name', 'agent_version']

# List to store all server data
all_servers = []

# Loop through each App ID
for app_id in App_Ids:
    # Construct the API URL for the current App ID
    url = f"{base_url}{OrgUUid}/applications/{app_id}/servers"
    
    # Make the GET request to the API
    response = requests.get(url, headers=contrast_headers)
    
    # Check if the request was successful
    if response.status_code == 200:
        # Parse the JSON response
        data = response.json()
        # Assume the data contains a 'servers' key with a list of server objects
        servers = data.get('servers', [])
        
        # Extract the required fields from each server and add app_id for reference
        for server in servers:
            row = {field: server.get(field, '') for field in required_fields}
            row['app_id'] = app_id  # Add app_id to track the source application
            all_servers.append(row)
    else:
        # Handle errors if the request fails
        print(f"Error for App ID {app_id}: {response.status_code} - {response.text}")

# Create a pandas DataFrame from the combined data
df = pd.DataFrame(all_servers)

# Reorder columns to have app_id first, followed by required fields
columns = ['app_id'] + required_fields
df = df[columns]

# Save the DataFrame to an Excel file
df.to_excel('Data.xlsx', index=False)
print("Data successfully saved to Data.xlsx")